[{"/home/victorpc/Área de trabalho/HandTalk-Toolkit/src/index.tsx":"1","/home/victorpc/Área de trabalho/HandTalk-Toolkit/src/reportWebVitals.ts":"2","/home/victorpc/Área de trabalho/HandTalk-Toolkit/src/App.tsx":"3","/home/victorpc/Área de trabalho/HandTalk-Toolkit/src/Pages/Home.tsx":"4","/home/victorpc/Área de trabalho/HandTalk-Toolkit/src/Components/NavBar.tsx":"5","/home/victorpc/Área de trabalho/HandTalk-Toolkit/src/Components/Footer.tsx":"6","/home/victorpc/Área de trabalho/HandTalk-Toolkit/src/Components/SpeedDial.tsx":"7","/home/victorpc/Área de trabalho/HandTalk-Toolkit/src/Components/BoxContainer2.tsx":"8","/home/victorpc/Área de trabalho/HandTalk-Toolkit/src/Components/BoxContainer.tsx":"9"},{"size":500,"mtime":1646500695435,"results":"10","hashOfConfig":"11"},{"size":425,"mtime":1646500695438,"results":"12","hashOfConfig":"11"},{"size":669,"mtime":1646516570189,"results":"13","hashOfConfig":"11"},{"size":1016,"mtime":1646515908417,"results":"14","hashOfConfig":"11"},{"size":6952,"mtime":1646524110729,"results":"15","hashOfConfig":"11"},{"size":791,"mtime":1646524132392,"results":"16","hashOfConfig":"11"},{"size":2065,"mtime":1646516352086,"results":"17","hashOfConfig":"11"},{"size":988,"mtime":1646514036378,"results":"18","hashOfConfig":"11"},{"size":1758,"mtime":1646514746579,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"1npvxlb",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"23"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"23"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"23"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/victorpc/Área de trabalho/HandTalk-Toolkit/src/index.tsx",[],[],["52","53"],"/home/victorpc/Área de trabalho/HandTalk-Toolkit/src/reportWebVitals.ts",[],[],"/home/victorpc/Área de trabalho/HandTalk-Toolkit/src/App.tsx",["54"],[],"import React from \"react\";\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport Home from \"./Pages/Home\";\nimport NavBar from \"./Components/NavBar\";\nimport { CssBaseline } from '@mui/material';\nimport Footer from \"./Components/Footer\";\nimport Loading from \"./Components/Loading\";\n\nexport interface IAppProps { }\n\nconst App: React.FunctionComponent<IAppProps> = (props) => {\n\n  return (\n    <>\n      <BrowserRouter>\n        <CssBaseline>\n          <NavBar />\n          <Routes>\n            <Route path=\"/\" element={<Home />} />\n          </Routes>\n          <Footer />\n        </CssBaseline>\n      </BrowserRouter>\n    </>\n  );\n};\n\nexport default App;\n","/home/victorpc/Área de trabalho/HandTalk-Toolkit/src/Pages/Home.tsx",["55","56","57"],[],"import * as React from \"react\";\nimport BoxContainer from \"../Components/BoxContainer\";\nimport BoxContainer2 from \"../Components/BoxContainer2\";\nimport { Grid, Container, Box } from '@mui/material';\nimport SpeedDialComponent from \"../Components/SpeedDial\";\n\nexport interface IHomeProps { }\n\nconst Home: React.FunctionComponent<IHomeProps> = (props) => {\n\n  return (\n    <>\n      <Grid container spacing={2} sx={{display: \"flex\"}}>\n        <Grid item xs={12}>\n          <Box sx={{ my: 2 }}>\n            {[...new Array(12)]\n              .map(\n                () => `Cras mattis consectetur purus sit amet fermentum.\nCras justo odio, dapibus ac facilisis in, egestas eget quam.\nMorbi leo risus, porta ac consectetur ac, vestibulum at eros.\nPraesent commodo cursus magna, vel scelerisque nisl consectetur et.`,\n              )\n              .join('\\n')}\n          </Box>\n        </Grid>\n        <Grid item xs={12}>\n              <SpeedDialComponent/>\n        </Grid>\n      </Grid>\n\n\n    </>\n  );\n};\nexport default Home; ","/home/victorpc/Área de trabalho/HandTalk-Toolkit/src/Components/NavBar.tsx",["58","59"],[],"import * as React from \"react\";\nimport {\n    AppBar,\n    Box,\n    Toolbar,\n    IconButton,\n    Typography,\n    Menu,\n    Container,\n    Avatar,\n    Button,\n    Tooltip,\n    MenuItem\n} from '@mui/material';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport { styled } from '@mui/system';\nimport { ReactComponent as Male } from \"../Assets/svg/male.svg\";\nimport Icon from \"../Assets/img/icon2.png\";\nimport { Link } from \"react-router-dom\";\n\nexport interface INavBarProps { }\n\nconst pages = ['Home'];\nconst settings = ['Logout'];\n\nconst Nav = styled(\"div\")(({ theme }) => ({\n    \"& \t.MuiAppBar-root\": {\n        backgroundColor: \"#ffa500\"\n    },\n}));\n\n\nconst NavBar: React.FunctionComponent<INavBarProps> = (props) => {\n\n    const [anchorElNav, setAnchorElNav] = React.useState<null | HTMLElement>(null);\n    const [anchorElUser, setAnchorElUser] = React.useState<null | HTMLElement>(null);\n\n    const handleOpenNavMenu = (event: React.MouseEvent<HTMLElement>) => {\n        setAnchorElNav(event.currentTarget);\n    };\n    const handleOpenUserMenu = (event: React.MouseEvent<HTMLElement>) => {\n        setAnchorElUser(event.currentTarget);\n    };\n\n    const handleCloseNavMenu = (event: React.MouseEvent<HTMLElement>) => {\n        setAnchorElNav(null);\n    };\n\n    const handleCloseUserMenu = () => {\n        setAnchorElUser(null);\n    };\n    return (\n        <>\n            <Nav>\n                <AppBar position=\"static\">\n                    <Container maxWidth=\"xl\">\n                        <Toolbar disableGutters>\n                            <Typography\n                                variant=\"h6\"\n                                noWrap\n                                component=\"div\"\n                                sx={{ mr: 2, display: { xs: 'none', md: 'flex' } }}\n                            >\n                                Hand Talk\n                            </Typography>\n\n                            <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\n                                <IconButton\n                                    size=\"large\"\n                                    aria-label=\"account of current user\"\n                                    aria-controls=\"menu-appbar\"\n                                    aria-haspopup=\"true\"\n                                    onClick={handleOpenNavMenu}\n                                    color=\"secondary\"\n                                >\n                                    <MenuIcon />\n                                </IconButton>\n                                <Menu\n                                    id=\"menu-appbar\"\n                                    anchorEl={anchorElNav}\n                                    anchorOrigin={{\n                                        vertical: 'bottom',\n                                        horizontal: 'left',\n                                    }}\n                                    keepMounted\n                                    transformOrigin={{\n                                        vertical: 'top',\n                                        horizontal: 'left',\n                                    }}\n                                    open={Boolean(anchorElNav)}\n                                    onClose={handleCloseNavMenu}\n                                    sx={{\n                                        display: { xs: 'block', md: 'none' },\n                                    }}\n                                >\n                                    {pages.map((page) => (\n                                        <MenuItem key={page} onClick={handleCloseNavMenu}>\n                                            <Typography textAlign=\"center\">{page}</Typography>\n                                        </MenuItem>\n                                    ))}\n                                </Menu>\n                            </Box>\n                            <Typography\n                                variant=\"h6\"\n                                noWrap\n                                component=\"div\"\n                                sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}\n                            >\n                                Hand Talk\n                            </Typography>\n                            <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\n                                {pages.map((page) => (\n                                    <Button\n                                        key={page}\n                                        onClick={handleCloseNavMenu}\n                                        sx={{ my: 2, color: 'white', display: 'block' }}\n                                    >\n                                        {page}\n                                    </Button>\n                                ))}\n                            </Box>\n\n                            <Box sx={{ flexGrow: 0 }}>\n                                <Tooltip title=\"Open settings\">\n                                    <IconButton onClick={handleOpenUserMenu} sx={{ p: 0, color: \"#111111\" }}>\n                                        <Avatar\n                                            sx={{\n                                                bgcolor: \"#fafafa\"\n                                            }}\n                                        >\n                                            <Male />\n                                        </Avatar>\n                                    </IconButton>\n                                </Tooltip>\n                                <Menu\n                                    sx={{ mt: '45px' }}\n                                    id=\"menu-appbar\"\n                                    anchorEl={anchorElUser}\n                                    anchorOrigin={{\n                                        vertical: 'top',\n                                        horizontal: 'right',\n                                    }}\n                                    keepMounted\n                                    transformOrigin={{\n                                        vertical: 'top',\n                                        horizontal: 'right',\n                                    }}\n                                    open={Boolean(anchorElUser)}\n                                    onClose={handleCloseUserMenu}\n                                >\n                                    {settings.map((setting) => (\n                                        <MenuItem key={setting} onClick={handleCloseUserMenu}>\n                                            <Typography textAlign=\"center\">{setting}</Typography>\n                                        </MenuItem>\n                                    ))}\n                                </Menu>\n                            </Box>\n                        </Toolbar>\n                    </Container>\n                </AppBar>\n            </Nav>\n        </>\n    );\n};\nexport default NavBar; ","/home/victorpc/Área de trabalho/HandTalk-Toolkit/src/Components/Footer.tsx",[],[],"/home/victorpc/Área de trabalho/HandTalk-Toolkit/src/Components/SpeedDial.tsx",["60"],[],"import * as React from \"react\";\nimport Box from '@mui/material/Box';\nimport SpeedDial from '@mui/material/SpeedDial';\nimport SpeedDialAction from '@mui/material/SpeedDialAction';\nimport AccessibilityNewOutlinedIcon from '@mui/icons-material/AccessibilityNewOutlined';\nimport ContrastOutlinedIcon from '@mui/icons-material/ContrastOutlined';\nimport FormatSizeOutlinedIcon from '@mui/icons-material/FormatSizeOutlined';\nimport HighlightAltOutlinedIcon from '@mui/icons-material/HighlightAltOutlined';\nimport RecordVoiceOverOutlinedIcon from '@mui/icons-material/RecordVoiceOverOutlined';\nimport FormatLineSpacingOutlinedIcon from '@mui/icons-material/FormatLineSpacingOutlined';\nimport Icon from \"../Assets/img/icon2.png\";\n\nconst actions = [\n  { icon: <ContrastOutlinedIcon />, name: 'Alto Contraste' },\n  { icon: <FormatSizeOutlinedIcon />, name: 'Fonte em +20%' },\n  { icon: <HighlightAltOutlinedIcon />, name: 'Highlights' },\n  { icon: <RecordVoiceOverOutlinedIcon />, name: 'Conteúdo por voz' },\n  { icon: <FormatLineSpacingOutlinedIcon />, name: 'Espaçamento entre linhas' },\n];\n\nexport interface ISpeedDialProps { }\n\nconst SpeedDialComponent: React.FunctionComponent<ISpeedDialProps> = (props) => {\n\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  return (\n    <>\n      <Box sx={{ height: 100, transform: 'translateZ(0px)', flexGrow: 1 }}>\n        <SpeedDial\n          ariaLabel=\"SpeedDial controlled open example\"\n          sx={{position: 'absolute', bottom: 0, right: 16 }}\n          icon={<AccessibilityNewOutlinedIcon />}\n          direction=\"left\"\n          onClose={handleClose}\n          onOpen={handleOpen}\n          open={open}\n        >\n          {actions.map((action) => (\n            <SpeedDialAction\n              key={action.name}\n              icon={action.icon}\n              tooltipTitle={action.name}\n              onClick={handleClose}\n            />\n          ))}\n        </SpeedDial>\n      </Box>\n    </>\n  );\n};\nexport default SpeedDialComponent; ","/home/victorpc/Área de trabalho/HandTalk-Toolkit/src/Components/BoxContainer2.tsx",[],[],"/home/victorpc/Área de trabalho/HandTalk-Toolkit/src/Components/BoxContainer.tsx",[],[],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":7,"column":8,"nodeType":"67","messageId":"68","endLine":7,"endColumn":15},{"ruleId":"65","severity":1,"message":"69","line":2,"column":8,"nodeType":"67","messageId":"68","endLine":2,"endColumn":20},{"ruleId":"65","severity":1,"message":"70","line":3,"column":8,"nodeType":"67","messageId":"68","endLine":3,"endColumn":21},{"ruleId":"65","severity":1,"message":"71","line":4,"column":16,"nodeType":"67","messageId":"68","endLine":4,"endColumn":25},{"ruleId":"65","severity":1,"message":"72","line":18,"column":8,"nodeType":"67","messageId":"68","endLine":18,"endColumn":12},{"ruleId":"65","severity":1,"message":"73","line":19,"column":10,"nodeType":"67","messageId":"68","endLine":19,"endColumn":14},{"ruleId":"65","severity":1,"message":"72","line":11,"column":8,"nodeType":"67","messageId":"68","endLine":11,"endColumn":12},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"@typescript-eslint/no-unused-vars","'Loading' is defined but never used.","Identifier","unusedVar","'BoxContainer' is defined but never used.","'BoxContainer2' is defined but never used.","'Container' is defined but never used.","'Icon' is defined but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]