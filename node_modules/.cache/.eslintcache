[{"/home/victorpc/Área de trabalho/HandTalk-Toolkit/src/index.tsx":"1","/home/victorpc/Área de trabalho/HandTalk-Toolkit/src/reportWebVitals.ts":"2","/home/victorpc/Área de trabalho/HandTalk-Toolkit/src/App.tsx":"3","/home/victorpc/Área de trabalho/HandTalk-Toolkit/src/Pages/Home.tsx":"4","/home/victorpc/Área de trabalho/HandTalk-Toolkit/src/Components/NavBar.tsx":"5","/home/victorpc/Área de trabalho/HandTalk-Toolkit/src/Components/Footer.tsx":"6","/home/victorpc/Área de trabalho/HandTalk-Toolkit/src/Components/SpeedDial.tsx":"7","/home/victorpc/Área de trabalho/HandTalk-Toolkit/src/Components/AuthRoute.tsx":"8","/home/victorpc/Área de trabalho/HandTalk-Toolkit/src/Pages/Login.tsx":"9","/home/victorpc/Área de trabalho/HandTalk-Toolkit/src/Config/config.tsx":"10","/home/victorpc/Área de trabalho/HandTalk-Toolkit/src/Contexts/theme/ThemeContext.tsx":"11","/home/victorpc/Área de trabalho/HandTalk-Toolkit/src/Contexts/theme/light.tsx":"12","/home/victorpc/Área de trabalho/HandTalk-Toolkit/src/Contexts/theme/dark.tsx":"13"},{"size":500,"mtime":1646500695435,"results":"14","hashOfConfig":"15"},{"size":425,"mtime":1646500695438,"results":"16","hashOfConfig":"15"},{"size":760,"mtime":1646583219646,"results":"17","hashOfConfig":"15"},{"size":893,"mtime":1646576977858,"results":"18","hashOfConfig":"15"},{"size":6950,"mtime":1646583055350,"results":"19","hashOfConfig":"15"},{"size":731,"mtime":1646583013777,"results":"20","hashOfConfig":"15"},{"size":2733,"mtime":1646583238495,"results":"21","hashOfConfig":"15"},{"size":846,"mtime":1646577990595,"results":"22","hashOfConfig":"15"},{"size":968,"mtime":1646578677183,"results":"23","hashOfConfig":"15"},{"size":413,"mtime":1646578321030,"results":"24","hashOfConfig":"15"},{"size":1159,"mtime":1646583199544,"results":"25","hashOfConfig":"15"},{"size":488,"mtime":1646583198910,"results":"26","hashOfConfig":"15"},{"size":573,"mtime":1646583198445,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"1npvxlb",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/victorpc/Área de trabalho/HandTalk-Toolkit/src/index.tsx",[],[],["69","70"],"/home/victorpc/Área de trabalho/HandTalk-Toolkit/src/reportWebVitals.ts",[],[],"/home/victorpc/Área de trabalho/HandTalk-Toolkit/src/App.tsx",[],[],"/home/victorpc/Área de trabalho/HandTalk-Toolkit/src/Pages/Home.tsx",[],[],"/home/victorpc/Área de trabalho/HandTalk-Toolkit/src/Components/NavBar.tsx",["71","72"],[],"import * as React from \"react\";\nimport {\n    AppBar,\n    Box,\n    Toolbar,\n    IconButton,\n    Typography,\n    Menu,\n    Container,\n    Avatar,\n    Button,\n    Tooltip,\n    MenuItem\n} from '@mui/material';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport { styled } from '@mui/system';\nimport { ReactComponent as Male } from \"../Assets/svg/male.svg\";\nimport Icon from \"../Assets/img/icon2.png\";\nimport { Link } from \"react-router-dom\";\n\nexport interface INavBarProps { }\n\nconst pages = ['Home'];\nconst settings = ['Logout'];\n\nconst Nav = styled(\"div\")(({ theme }) => ({\n    \"& \t.MuiAppBar-root\": {\n        backgroundColor: \"#ffa500\"\n    },\n}));\n\n\nconst NavBar: React.FunctionComponent<INavBarProps> = (props) => {\n\n    const [anchorElNav, setAnchorElNav] = React.useState<null | HTMLElement>(null);\n    const [anchorElUser, setAnchorElUser] = React.useState<null | HTMLElement>(null);\n\n    const handleOpenNavMenu = (event: React.MouseEvent<HTMLElement>) => {\n        setAnchorElNav(event.currentTarget);\n    };\n    const handleOpenUserMenu = (event: React.MouseEvent<HTMLElement>) => {\n        setAnchorElUser(event.currentTarget);\n    };\n\n    const handleCloseNavMenu = (event: React.MouseEvent<HTMLElement>) => {\n        setAnchorElNav(null);\n    };\n\n    const handleCloseUserMenu = () => {\n        setAnchorElUser(null);\n    };\n    return (\n        <>\n            <Nav>\n                <AppBar position=\"static\">\n                    <Container maxWidth=\"xl\">\n                        <Toolbar disableGutters>\n                            <Typography\n                                variant=\"h6\"\n                                noWrap\n                                component=\"div\"\n                                sx={{ mr: 2, display: { xs: 'none', md: 'flex' } }}\n                            >\n                                Hand Talk\n                            </Typography>\n\n                            <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\n                                <IconButton\n                                    size=\"large\"\n                                    aria-label=\"account of current user\"\n                                    aria-controls=\"menu-appbar\"\n                                    aria-haspopup=\"true\"\n                                    onClick={handleOpenNavMenu}\n                                    color=\"secondary\"\n                                >\n                                    <MenuIcon />\n                                </IconButton>\n                                <Menu\n                                    id=\"menu-appbar\"\n                                    anchorEl={anchorElNav}\n                                    anchorOrigin={{\n                                        vertical: 'bottom',\n                                        horizontal: 'left',\n                                    }}\n                                    keepMounted\n                                    transformOrigin={{\n                                        vertical: 'top',\n                                        horizontal: 'left',\n                                    }}\n                                    open={Boolean(anchorElNav)}\n                                    onClose={handleCloseNavMenu}\n                                    sx={{\n                                        display: { xs: 'block', md: 'none' },\n                                    }}\n                                >\n                                    {pages.map((page) => (\n                                        <MenuItem key={page} onClick={handleCloseNavMenu}>\n                                            <Typography textAlign=\"center\">{page}</Typography>\n                                        </MenuItem>\n                                    ))}\n                                </Menu>\n                            </Box>\n                            <Typography\n                                variant=\"h6\"\n                                noWrap\n                                component=\"div\"\n                                sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}\n                            >\n                                Hand Talk\n                            </Typography>\n                            <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\n                                {pages.map((page) => (\n                                    <Button\n                                        key={page}\n                                        onClick={handleCloseNavMenu}\n                                        sx={{ my: 2, color: 'white', display: 'block' }}\n                                    >\n                                        {page}\n                                    </Button>\n                                ))}\n                            </Box>\n\n                            <Box sx={{ flexGrow: 0 }}>\n                                <Tooltip title=\"Open settings\">\n                                    <IconButton onClick={handleOpenUserMenu} sx={{ p: 0, color: \"white\" }}>\n                                        <Avatar\n                                            sx={{\n                                                bgcolor: \"#fafafa\"\n                                            }}\n                                        >\n                                            <Male />\n                                        </Avatar>\n                                    </IconButton>\n                                </Tooltip>\n                                <Menu\n                                    sx={{ mt: '45px' }}\n                                    id=\"menu-appbar\"\n                                    anchorEl={anchorElUser}\n                                    anchorOrigin={{\n                                        vertical: 'top',\n                                        horizontal: 'right',\n                                    }}\n                                    keepMounted\n                                    transformOrigin={{\n                                        vertical: 'top',\n                                        horizontal: 'right',\n                                    }}\n                                    open={Boolean(anchorElUser)}\n                                    onClose={handleCloseUserMenu}\n                                >\n                                    {settings.map((setting) => (\n                                        <MenuItem key={setting} onClick={handleCloseUserMenu}>\n                                            <Typography textAlign=\"center\">{setting}</Typography>\n                                        </MenuItem>\n                                    ))}\n                                </Menu>\n                            </Box>\n                        </Toolbar>\n                    </Container>\n                </AppBar>\n            </Nav>\n        </>\n    );\n};\nexport default NavBar; ","/home/victorpc/Área de trabalho/HandTalk-Toolkit/src/Components/Footer.tsx",[],[],"/home/victorpc/Área de trabalho/HandTalk-Toolkit/src/Components/SpeedDial.tsx",[],[],"/home/victorpc/Área de trabalho/HandTalk-Toolkit/src/Components/AuthRoute.tsx",["73"],[],"/home/victorpc/Área de trabalho/HandTalk-Toolkit/src/Pages/Login.tsx",[],[],"/home/victorpc/Área de trabalho/HandTalk-Toolkit/src/Config/config.tsx",[],[],"/home/victorpc/Área de trabalho/HandTalk-Toolkit/src/Contexts/theme/ThemeContext.tsx",[],[],"/home/victorpc/Área de trabalho/HandTalk-Toolkit/src/Contexts/theme/light.tsx",[],[],"/home/victorpc/Área de trabalho/HandTalk-Toolkit/src/Contexts/theme/dark.tsx",[],[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":18,"column":8,"nodeType":"80","messageId":"81","endLine":18,"endColumn":12},{"ruleId":"78","severity":1,"message":"82","line":19,"column":10,"nodeType":"80","messageId":"81","endLine":19,"endColumn":14},{"ruleId":"83","severity":1,"message":"84","line":24,"column":8,"nodeType":"85","endLine":24,"endColumn":14,"suggestions":"86"},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"@typescript-eslint/no-unused-vars","'Icon' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["89"],"no-global-assign","no-unsafe-negation",{"desc":"90","fix":"91"},"Update the dependencies array to be: [auth, navigate]",{"range":"92","text":"93"},[734,740],"[auth, navigate]"]